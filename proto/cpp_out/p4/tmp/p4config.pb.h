// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/tmp/p4config.proto

#ifndef PROTOBUF_p4_2ftmp_2fp4config_2eproto__INCLUDED
#define PROTOBUF_p4_2ftmp_2fp4config_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace p4 {
namespace tmp {
class P4DeviceConfig;
class P4DeviceConfigDefaultTypeInternal;
extern P4DeviceConfigDefaultTypeInternal _P4DeviceConfig_default_instance_;
class P4DeviceConfig_Extras;
class P4DeviceConfig_ExtrasDefaultTypeInternal;
extern P4DeviceConfig_ExtrasDefaultTypeInternal _P4DeviceConfig_Extras_default_instance_;
}  // namespace tmp
}  // namespace p4

namespace p4 {
namespace tmp {

namespace protobuf_p4_2ftmp_2fp4config_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_p4_2ftmp_2fp4config_2eproto

// ===================================================================


// -------------------------------------------------------------------

class P4DeviceConfig_Extras : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.tmp.P4DeviceConfig.Extras) */ {
 public:
  P4DeviceConfig_Extras();
  virtual ~P4DeviceConfig_Extras();

  P4DeviceConfig_Extras(const P4DeviceConfig_Extras& from);

  inline P4DeviceConfig_Extras& operator=(const P4DeviceConfig_Extras& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4DeviceConfig_Extras& default_instance();

  static inline const P4DeviceConfig_Extras* internal_default_instance() {
    return reinterpret_cast<const P4DeviceConfig_Extras*>(
               &_P4DeviceConfig_Extras_default_instance_);
  }

  void Swap(P4DeviceConfig_Extras* other);

  // implements Message ----------------------------------------------

  inline P4DeviceConfig_Extras* New() const PROTOBUF_FINAL { return New(NULL); }

  P4DeviceConfig_Extras* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4DeviceConfig_Extras& from);
  void MergeFrom(const P4DeviceConfig_Extras& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4DeviceConfig_Extras* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> kv = 1;
  int kv_size() const;
  void clear_kv();
  static const int kKvFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      kv() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_kv();

  // @@protoc_insertion_point(class_scope:p4.tmp.P4DeviceConfig.Extras)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      P4DeviceConfig_Extras_KvEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > kv_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2ftmp_2fp4config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4DeviceConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.tmp.P4DeviceConfig) */ {
 public:
  P4DeviceConfig();
  virtual ~P4DeviceConfig();

  P4DeviceConfig(const P4DeviceConfig& from);

  inline P4DeviceConfig& operator=(const P4DeviceConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4DeviceConfig& default_instance();

  static inline const P4DeviceConfig* internal_default_instance() {
    return reinterpret_cast<const P4DeviceConfig*>(
               &_P4DeviceConfig_default_instance_);
  }

  void Swap(P4DeviceConfig* other);

  // implements Message ----------------------------------------------

  inline P4DeviceConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  P4DeviceConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4DeviceConfig& from);
  void MergeFrom(const P4DeviceConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4DeviceConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef P4DeviceConfig_Extras Extras;

  // accessors -------------------------------------------------------

  // bytes device_data = 3;
  void clear_device_data();
  static const int kDeviceDataFieldNumber = 3;
  const ::std::string& device_data() const;
  void set_device_data(const ::std::string& value);
  #if LANG_CXX11
  void set_device_data(::std::string&& value);
  #endif
  void set_device_data(const char* value);
  void set_device_data(const void* value, size_t size);
  ::std::string* mutable_device_data();
  ::std::string* release_device_data();
  void set_allocated_device_data(::std::string* device_data);

  // .p4.tmp.P4DeviceConfig.Extras extras = 2;
  bool has_extras() const;
  void clear_extras();
  static const int kExtrasFieldNumber = 2;
  const ::p4::tmp::P4DeviceConfig_Extras& extras() const;
  ::p4::tmp::P4DeviceConfig_Extras* mutable_extras();
  ::p4::tmp::P4DeviceConfig_Extras* release_extras();
  void set_allocated_extras(::p4::tmp::P4DeviceConfig_Extras* extras);

  // bool reassign = 1;
  void clear_reassign();
  static const int kReassignFieldNumber = 1;
  bool reassign() const;
  void set_reassign(bool value);

  // @@protoc_insertion_point(class_scope:p4.tmp.P4DeviceConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr device_data_;
  ::p4::tmp::P4DeviceConfig_Extras* extras_;
  bool reassign_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2ftmp_2fp4config_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// P4DeviceConfig_Extras

// map<string, string> kv = 1;
inline int P4DeviceConfig_Extras::kv_size() const {
  return kv_.size();
}
inline void P4DeviceConfig_Extras::clear_kv() {
  kv_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
P4DeviceConfig_Extras::kv() const {
  // @@protoc_insertion_point(field_map:p4.tmp.P4DeviceConfig.Extras.kv)
  return kv_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
P4DeviceConfig_Extras::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_map:p4.tmp.P4DeviceConfig.Extras.kv)
  return kv_.MutableMap();
}

// -------------------------------------------------------------------

// P4DeviceConfig

// bool reassign = 1;
inline void P4DeviceConfig::clear_reassign() {
  reassign_ = false;
}
inline bool P4DeviceConfig::reassign() const {
  // @@protoc_insertion_point(field_get:p4.tmp.P4DeviceConfig.reassign)
  return reassign_;
}
inline void P4DeviceConfig::set_reassign(bool value) {
  
  reassign_ = value;
  // @@protoc_insertion_point(field_set:p4.tmp.P4DeviceConfig.reassign)
}

// .p4.tmp.P4DeviceConfig.Extras extras = 2;
inline bool P4DeviceConfig::has_extras() const {
  return this != internal_default_instance() && extras_ != NULL;
}
inline void P4DeviceConfig::clear_extras() {
  if (GetArenaNoVirtual() == NULL && extras_ != NULL) delete extras_;
  extras_ = NULL;
}
inline const ::p4::tmp::P4DeviceConfig_Extras& P4DeviceConfig::extras() const {
  // @@protoc_insertion_point(field_get:p4.tmp.P4DeviceConfig.extras)
  return extras_ != NULL ? *extras_
                         : *::p4::tmp::P4DeviceConfig_Extras::internal_default_instance();
}
inline ::p4::tmp::P4DeviceConfig_Extras* P4DeviceConfig::mutable_extras() {
  
  if (extras_ == NULL) {
    extras_ = new ::p4::tmp::P4DeviceConfig_Extras;
  }
  // @@protoc_insertion_point(field_mutable:p4.tmp.P4DeviceConfig.extras)
  return extras_;
}
inline ::p4::tmp::P4DeviceConfig_Extras* P4DeviceConfig::release_extras() {
  // @@protoc_insertion_point(field_release:p4.tmp.P4DeviceConfig.extras)
  
  ::p4::tmp::P4DeviceConfig_Extras* temp = extras_;
  extras_ = NULL;
  return temp;
}
inline void P4DeviceConfig::set_allocated_extras(::p4::tmp::P4DeviceConfig_Extras* extras) {
  delete extras_;
  extras_ = extras;
  if (extras) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.tmp.P4DeviceConfig.extras)
}

// bytes device_data = 3;
inline void P4DeviceConfig::clear_device_data() {
  device_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4DeviceConfig::device_data() const {
  // @@protoc_insertion_point(field_get:p4.tmp.P4DeviceConfig.device_data)
  return device_data_.GetNoArena();
}
inline void P4DeviceConfig::set_device_data(const ::std::string& value) {
  
  device_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.tmp.P4DeviceConfig.device_data)
}
#if LANG_CXX11
inline void P4DeviceConfig::set_device_data(::std::string&& value) {
  
  device_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.tmp.P4DeviceConfig.device_data)
}
#endif
inline void P4DeviceConfig::set_device_data(const char* value) {
  
  device_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.tmp.P4DeviceConfig.device_data)
}
inline void P4DeviceConfig::set_device_data(const void* value, size_t size) {
  
  device_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.tmp.P4DeviceConfig.device_data)
}
inline ::std::string* P4DeviceConfig::mutable_device_data() {
  
  // @@protoc_insertion_point(field_mutable:p4.tmp.P4DeviceConfig.device_data)
  return device_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4DeviceConfig::release_device_data() {
  // @@protoc_insertion_point(field_release:p4.tmp.P4DeviceConfig.device_data)
  
  return device_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4DeviceConfig::set_allocated_device_data(::std::string* device_data) {
  if (device_data != NULL) {
    
  } else {
    
  }
  device_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_data);
  // @@protoc_insertion_point(field_set_allocated:p4.tmp.P4DeviceConfig.device_data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace tmp
}  // namespace p4

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_p4_2ftmp_2fp4config_2eproto__INCLUDED
